---
name: Continuous Integration

on: # yamllint disable-line
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-javascript:
    name: JavaScript Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install Dependencies
        id: pnpm-install
        run: pnpm install

      - name: Check Format
        id: pnpm-format-check
        run: pnpm run format:check

      - name: Lint
        id: pnpm-lint
        run: pnpm run lint
        timeout-minutes: 3

      - name: Test
        id: pnpm-ci-test
        run: pnpm run ci-test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: true

  test-action:
    name: GitHub Actions Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Test Local Action
        id: test-action
        uses: ./
        with:
          trailhead-username: nabondance
          display-type: 'card'
          display-file: 'README-example.md'
          card-path: './output/images'
          no-commit: true

      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.stats }}" | base64 --decode

      - name: Upload images as artifact
        id: upload-artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: images
          path: ./output/images/*

      - name: Comment on PR
        id: comment-on-pr
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const issue_number = context.payload.pull_request.number;
            const artifact_id = "${{ steps.upload-artifact.outputs.artifact-id }}";
            const artifact_url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${artifact_id}`;
            const unique_identifier = "<!-- unique_identifier_cards_artifact -->";
            const comment_body = `${unique_identifier}\nCards generated by the CI: [Download artifact](${artifact_url})`;

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
            });

            const botComment = comments.data.find(comment => comment.body.includes(unique_identifier));

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment_body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: comment_body,
              });
            }
